'''
1.链表是一种通过指针串联在一起的线性结构，每一个节点由两部分组成，一个是数据域
  一个是指针域（存放指向下一个节点的指针），最后一个节点的指针指向null（空指针的意思）。
2.链表的入口节点称为链表的头结点，也就是head。
3.单链表、双链表、循环链表
  双链表：每一个节点有两个指针域，一个指向下一个节点，一个指向上一个节点。
4.数组在内存中是连续分布的，但是链表在内存中不是连续分布的。链表是通过各个指针链接在内存中的各个节点。
  链表中的节点在内存中不是连续分布的，而是散乱分布在内存中的某地址上，分配机制取决于操作系统的内存管理。

链表的操作：
    1.删除节点
    2.添加节点
    
数组和链表的对比：
    1.数组在定义的时候，长度就是固定的，如果想改动数组的长度，就需要重新定义一个新的数组。
    2.链表的长度不固定，并且可以动态增删，适合数据量不固定，频繁增删，较少查询的场景。


链表的定义代码  # TODO:注意书写（平时leetcode直接给出会让我们忽视）
'''
# 定义代码
class ListNode:
    def __init__(self, val, next=None):
        self.val = val
        self.next = next